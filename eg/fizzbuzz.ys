#!/usr/bin/env yamlscript

# This program has multiple implementations of "fizzbuzz".

# usage: yamlscript fizzbuzz.ys [<count>] [<fizzbuzz-fn-#>]

# The main function runs a certain requested fizzbuzz implementation function
# for a certain requested number (default is 100).

defn main(count=100, impl="1"):
  fizzbuzz =: "fizzbuzz-$impl"

  getenv("YAMLSCRIPT_TEST") |:
    say: "Running function '$fizzbuzz' with count=$count"

  function =: resolve(symbol(fizzbuzz))
  result   =: function(number(count))

  map(say): result

# These implementation functions were adapted from
# https://rosettacode.org/wiki/FizzBuzz#Clojure

defn fizzbuzz-1(n):
  map:
  - fn (x):
      ???:
        zero?(mod(x 15)) : "FizzBuzz"
        zero?(mod(x 5))  : "Buzz"
        zero?(mod(x 3))  : "Fizz"
        :else: x
  - (1 .. n)


defn fizzbuzz-2(n):
  loop [i 1, l []]:
    if (i > n):
    - l
    - ^^^:
      - inc(i)
      - conj:
        - l
        - ???:
            zero?(mod(i 15)) : "FizzBuzz"
            zero?(mod(i 5))  : "Buzz"
            zero?(mod(i 3))  : "Fizz"
            :else: i


defn fizzbuzz-3(n):
  map:
  - fn (x):
      s =:
        str:
        - (zero? mod(x 3)) ?: "Fizz"
        - (zero? mod(x 5)) ?: "Buzz"
      if (empty? s): x, s
  - (1 .. n)
